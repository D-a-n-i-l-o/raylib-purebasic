;*******************************************************************************************;*;*   raylib [textures] example - Procedural images generation;*;*   This example has been created using raylib 1.8 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2O17 Wilhem Barbier (@nounoursheureux);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the module#NUM_TEXTURES = 7                       ; Currently we have 7 generation algorithms; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [textures] example - procedural images generation" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.Define.Image verticalGradient, horizontalGradient, radialGradient,             checked, whiteNoise, perlinNoise, cellularGenImageGradientV(@verticalGradient, #SCREEN_WIDTH, #SCREEN_HEIGHT, #COLOR_RED, #COLOR_BLUE)GenImageGradientH(@horizontalGradient, #SCREEN_WIDTH, #SCREEN_HEIGHT, #COLOR_RED, #COLOR_BLUE)GenImageGradientRadial(@radialGradient, #SCREEN_WIDTH, #SCREEN_HEIGHT, 0.0, #COLOR_WHITE, #COLOR_BLACK)GenImageChecked(@checked, #SCREEN_WIDTH, #SCREEN_HEIGHT, 32, 32, #COLOR_RED, #COLOR_BLUE)GenImageWhiteNoise(@whiteNoise, #SCREEN_WIDTH, #SCREEN_HEIGHT, 0.5)GenImagePerlinNoise(@perlinNoise, #SCREEN_WIDTH, #SCREEN_HEIGHT, 50, 50, 4.0)GenImageCellular(@cellular, #SCREEN_WIDTH, #SCREEN_HEIGHT, 32)Dim textures.Texture2D(#NUM_TEXTURES)LoadTextureFromImage(@textures(0), @verticalGradient)LoadTextureFromImage(@textures(1), @horizontalGradient)LoadTextureFromImage(@textures(2), @radialGradient)LoadTextureFromImage(@textures(3), @checked)LoadTextureFromImage(@textures(4), @whiteNoise)LoadTextureFromImage(@textures(5), @perlinNoise)LoadTextureFromImage(@textures(6), @cellular); Unload image data (CPU RAM)UnloadImage(@verticalGradient)UnloadImage(@horizontalGradient)UnloadImage(@radialGradient)UnloadImage(@checked)UnloadImage(@whiteNoise)UnloadImage(@perlinNoise)UnloadImage(@cellular)Define currentTexture = 0SetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopRepeat    ; Update    ;>---------------------------------------------------------------------------------    If IsMouseButtonPressed(#MOUSE_LEFT_BUTTON) Or IsKeyPressed(#KEY_RIGHT)        currentTexture = (currentTexture + 1) % #NUM_TEXTURES   ; Cycle between the textures    EndIf    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)        DrawTexture(@textures(currentTexture), 0, 0, #COLOR_WHITE)        DrawRectangle(30, 400, 325, 30, Fade(#COLOR_SKYBLUE, 0.5))        DrawRectangleLines(30, 400, 325, 30, Fade(#COLOR_WHITE, 0.5))        DrawTextRaylib("MOUSE LEFT BUTTON to CYCLE PROCEDURAL TEXTURES", 40, 410, 10, #COLOR_WHITE)        Select currentTexture            Case 0: DrawTextRaylib("VERTICAL GRADIENT", 560, 10, 20, #COLOR_RAYWHITE)            Case 1: DrawTextRaylib("HORIZONTAL GRADIENT", 540, 10, 20, #COLOR_RAYWHITE)            Case 2: DrawTextRaylib("RADIAL GRADIENT", 580, 10, 20, #COLOR_LIGHTGRAY)            Case 3: DrawTextRaylib("CHECKED", 680, 10, 20, #COLOR_RAYWHITE)            Case 4: DrawTextRaylib("WHITE NOISE", 641, 11, 20, #COLOR_DARKGRAY)                    DrawTextRaylib("WHITE NOISE", 640, 10, 20, #COLOR_BLACK)            Case 5: DrawTextRaylib("PERLIN NOISE", 630, 10, 20, #COLOR_RAYWHITE)            Case 6: DrawTextRaylib("CELLULAR", 670, 10, 20, #COLOR_RAYWHITE)        EndSelect    EndDrawing()    ;>---------------------------------------------------------------------------------        If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/textures_image_generation.png")    EndIf    Until WindowShouldClose()               ; Detect window close button or ESC key; De-Initialization;>-------------------------------------------------------------------------------------Define i; Unload textures data (GPU VRAM)For i = 0 To #NUM_TEXTURES-1 : UnloadTexture(@textures(i)) : NextCloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------