;*******************************************************************************************;*;*   raylib example - loading thread;*;*   This example has been created using raylib 2.5 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2014-2019 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the moduleGlobal dataLoaded       = #FalseGlobal dataLoaded_mutex = CreateMutex()Global dataProgressDeclare LoadDataThread(*t)Enumeration    #STATE_WAITING    #STATE_LOADING    #STATE_FINISHEDEndEnumeration; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [core] example - loading thread" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.Define state         = #STATE_WAITINGDefine framesCounter = 0SetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopWhile Not WindowShouldClose()           ; Detect window close button or ESC key    ; Update    ;>---------------------------------------------------------------------------------    Select state        Case #STATE_WAITING            If IsKeyPressed(#KEY_ENTER)                If Not CreateThread(@LoadDataThread(), 0)                    TraceLog(#LOG_ERROR, "Error creating loading thread")                Else                    TraceLog(#LOG_INFO, "Loading thread initialized successfully")                EndIf                state = #STATE_LOADING            EndIf        Case #STATE_LOADING            framesCounter + 1            If TryLockMutex(dataLoaded_mutex)                If dataLoaded = #True                    framesCounter = 0                    state = #STATE_FINISHED                EndIf                UnlockMutex(dataLoaded_mutex)            EndIf        Case #STATE_FINISHED            If IsKeyPressed(#KEY_ENTER)                ; Reset everything To launch again                LockMutex(dataLoaded_mutex)                    dataLoaded = #False                    dataProgress = 0                    state = #STATE_WAITING                UnlockMutex(dataLoaded_mutex)            EndIf    EndSelect    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)        Select state            Case #STATE_WAITING                DrawTextRaylib("PRESS ENTER to START LOADING DATA", 150, 170, 20, #COLOR_DARKGRAY)            Case #STATE_LOADING                DrawRectangle(150, 200, dataProgress, 60, #COLOR_SKYBLUE)                If (framesCounter/15)%2                    DrawTextRaylib("LOADING DATA...", 240, 210, 40, #COLOR_DARKBLUE)                EndIf            Case #STATE_FINISHED                DrawRectangle(150, 200, 500, 60, #COLOR_LIME)                DrawTextRaylib("DATA LOADED!", 250, 210, 40, #COLOR_GREEN)        EndSelect            DrawRectangleLines(150, 200, 500, 60, #COLOR_DARKGRAY)            EndDrawing()    ;>---------------------------------------------------------------------------------        If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/core_loading_thread.png")    EndIf    Wend; De-Initialization;>-------------------------------------------------------------------------------------CloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------Procedure LoadDataThread(*t)    Protected timeCounter = 0                       ; Time counted in ms    Protected startTime   = ElapsedMilliseconds()   ; Start time    ; We simulate Data loading With a time counter For 5 seconds    While (timeCounter < 5000)        timeCounter = ElapsedMilliseconds() - startTime        ; We accumulate time over a Global variable To be used in        ; main thread As a progress bar        dataProgress = timeCounter/10    Wend        ; When Data has finished loading, we set Global variable    LockMutex(dataLoaded_mutex)        dataLoaded = #True    UnlockMutex(dataLoaded_mutex)EndProcedure