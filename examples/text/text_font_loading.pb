;*******************************************************************************************;*;*   raylib [text] example - Font loading;*;*   raylib can load fonts from multiple file formats:;*;*     - TTF/OTF > Sprite font atlas is generated on loading, user can configure;*                 some of the generation parameters (size, characters to include);*     - BMFonts > Angel code font fileformat, sprite font image must be provided;*                 together with the .fnt file, font generation cna not be configured;*     - XNA Spritefont > Sprite font image, following XNA Spritefont conventions,;*                 Characters in image must follow some spacing and order rules;*;*   This example has been created using raylib 2.6 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2016-2019 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the module; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [text] example - font loading" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.; Define characters to draw; NOTE: raylib supports UTF-8 encoding, following list is actually codified as UTF8 internallyDefine msg.s = ~"!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHI\nJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmn\nopqrstuvwxyz{|}~¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓ\nÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷\nøùúûüýþÿ"; NOTE: Textures/Fonts MUST be loaded after Window initialization (OpenGL context is required); BMFont (AngelCode) : Font data and image atlas have been generated using external programDefine fontBm.FontLoadFontRaylib(@fontBm, "resources/pixantiqua.fnt"); TTF font : Font data and atlas are generated directly from TTF; NOTE: We define a font base size of 32 pixels tall and up-to 250 charactersDefine fontTtf.FontLoadFontEx(@fontTtf, "resources/pixantiqua.ttf", 32, 0, 250)Define useTtf = #FalseDefine vec.Vector2InitVector2(@vec, 20.0, 100.0)SetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopWhile Not WindowShouldClose()           ; Detect window close button or ESC key    ; Update    ;>---------------------------------------------------------------------------------    If IsKeyDown(#KEY_SPACE) : useTtf = #True    Else                     : useTtf = #False    EndIf    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)        DrawTextRaylib("Hold SPACE to use TTF generated font", 20, 20, 20, #COLOR_LIGHTGRAY)        If Not useTtf            DrawTextEx(@fontBm, msg, @vec, fontBm\baseSize, 2, #COLOR_MAROON)            DrawTextRaylib("Using BMFont (Angelcode) imported", 20, GetScreenHeight() - 30, 20, #COLOR_GRAY)        Else            DrawTextEx(@fontTtf, msg, @vec, fontTtf\baseSize, 2, #COLOR_LIME)            DrawTextRaylib("Using TTF font generated", 20, GetScreenHeight() - 30, 20, #COLOR_GRAY)        EndIf    EndDrawing()    ;>---------------------------------------------------------------------------------        If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/text_font_loading.png")    EndIf    Wend; De-Initialization;>-------------------------------------------------------------------------------------UnloadFont(@fontBm)                     ; AngelCode Font unloadingUnloadFont(@fontTtf)                    ; TTF Font unloadingCloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------