;*******************************************************************************************;*;*   raylib [text] example - Draw text inside a rectangle;*;*   This example has been created using raylib 2.3 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Example contributed by Vlad Adrian (@demizdor) and reviewed by Ramon Santamaria (@raysan5);*;*   Copyright (c) 2018 Vlad Adrian (@demizdor) and Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the module; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [text] example - draw text inside a rectangle" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.#text = ~"Text cannot escape\tthis container\t...word wrap also works when active so here's "+        ~"a long text For testing.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod "+        ~"tempor incididunt ut labore et dolore magna aliqua. Nec ullamcorper sit amet risus nullam eget felis eget."Define resizing = #False, wordWrap = #TrueDefine.Rectangle container, resizerInitRectangle(@container, 25, 25, #SCREEN_WIDTH - 50, #SCREEN_HEIGHT - 250)InitRectangle(@resizer, container\x + container\width - 17, container\y + container\height - 17, 14, 14); Minimum width and heigh for the container rectangle#minWidth = 60#minHeight = 60#maxWidth = #SCREEN_WIDTH - 50#maxHeight = #SCREEN_HEIGHT - 160Define lastMouse.Vector2                ; Stores last mouse coordinatesDefine borderColor = #COLOR_MAROON      ; Container border colorDefine font.Font : GetFontDefault(@font); Get default system fontSetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopWhile Not WindowShouldClose()           ; Detect window close button or ESC key    ; Update    ;>---------------------------------------------------------------------------------    If IsKeyPressed(#KEY_SPACE) : wordWrap ! 1 : EndIf    Define mouse.Vector2 : GetMousePosition(@mouse)    ; Check if the mouse is inside the container and toggle border color    If CheckCollisionPointRec(@mouse, @container)        borderColor = Fade(#COLOR_MAROON, 0.4)    ElseIf Not resizing        borderColor = #COLOR_MAROON    EndIf    ; Container resizing logic    If resizing        If IsMouseButtonReleased(#MOUSE_LEFT_BUTTON)            resizing = #False        EndIf        Define width = container\width + (mouse\x - lastMouse\x)        If (width > #minWidth)            If width < #maxWidth                container\width = width            Else                container\width = #maxWidth            EndIf        Else            container\width = #minWidth        EndIf        Define height = container\height + (mouse\y - lastMouse\y)        If height > #minHeight            If height < #maxHeight                container\height = height            Else                container\height = #maxHeight            EndIf        Else            container\height = #minHeight        EndIf    Else        ; Check if we're resizing        If IsMouseButtonDown(#MOUSE_LEFT_BUTTON) And CheckCollisionPointRec(@mouse, @resizer)            resizing = #True        EndIf    EndIf    ; Move resizer rectangle properly    resizer\x = container\x + container\width - 17    resizer\y = container\y + container\height - 17    lastMouse = mouse   ; Update mouse    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)        DrawRectangleLinesEx(@container, 3, borderColor)    ; Draw container border        ; Draw text in container (add some padding)        Define rect.Rectangle        InitRectangle(@rect, container\x+4, container\y+4, container\width-4, container\height-4)        DrawTextRec(@font, #text, @rect, 20.0, 2.0, wordWrap, #COLOR_GRAY)        DrawRectangleRec(@resizer, borderColor)             ; Draw the resize box        ; Draw bottom info        DrawRectangle(0, #SCREEN_HEIGHT - 54, #SCREEN_WIDTH, 54, #COLOR_GRAY)        InitRectangle(@rect, 382, #SCREEN_HEIGHT - 34, 12, 12)        DrawRectangleRec(@rect, #COLOR_MAROON)                DrawTextRaylib("Word Wrap: ", 313, #SCREEN_HEIGHT-115, 20, #COLOR_BLACK)        If wordWrap            DrawTextRaylib("ON", 447, #SCREEN_HEIGHT - 115, 20, #COLOR_RED)        Else            DrawTextRaylib("OFF", 447, #SCREEN_HEIGHT - 115, 20, #COLOR_BLACK)        EndIf                DrawTextRaylib("Press [SPACE] to toggle word wrap", 218, #SCREEN_HEIGHT - 86, 20, #COLOR_GRAY)        DrawTextRaylib("Click hold & drag the    to resize the container", 155, #SCREEN_HEIGHT - 38, 20, #COLOR_RAYWHITE)    EndDrawing()    ;>---------------------------------------------------------------------------------        If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/text_rectangle_bounds.png")    EndIf    Wend; De-Initialization;>-------------------------------------------------------------------------------------CloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------