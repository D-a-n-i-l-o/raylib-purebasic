;*******************************************************************************************;*;*   raygui - portable window;*;*   DEPENDENCIES:;*       raylib 2.1  - Windowing/input management and drawing.;*       raygui 2.0  - Immediate-mode GUI controls.;*;*   COMPILATION (Windows - MinGW):;*       gcc -o $(NAME_PART).exe $(FILE_NAME) -I../../src -lraylib -lopengl32 -lgdi32 -std=c99;*;*   LICENSE: zlib/libpng;*;*   Copyright (c) 2020 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;*******************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importXIncludeFile "raygui.pbi"               ; and the raygui fileUseModule rayUseModule rayguiEnableExplicit; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 600SetConfigFlags(ray::#FLAG_WINDOW_UNDECORATED)InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raygui - portable window" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.; General variablesDefine.Vector2 mousePosition, panOffset, windowPositionwindowPosition\x = 500windowPosition\y = 200SetWindowPosition(windowPosition\x, windowPosition\y)Define dragWindow = #False, exitWindow = #FalseDefine rect.RectangleSetTargetFPS(60)                   ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopWhile Not WindowShouldClose() And Not exitWindow   ; Detect window close button or ESC key    ; Update    ;>---------------------------------------------------------------------------------    GetMousePosition(@mousePosition)    If IsMouseButtonPressed(#MOUSE_LEFT_BUTTON)        InitRectangle(@rect, 0, 0, #SCREEN_WIDTH, 20)        If CheckCollisionPointRec(@mousePosition, @rect)            dragWindow = #True            panOffset = mousePosition        EndIf    EndIf    If dragWindow        windowPosition\X + Round(mousePosition\x - panOffset\x,#PB_Round_Down)        windowPosition\Y + Round(mousePosition\y - panOffset\y,#PB_Round_Down)        If IsMouseButtonReleased(#MOUSE_LEFT_BUTTON)            dragWindow = #False        EndIf        SetWindowPosition(windowPosition\x, windowPosition\y)    EndIf    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(ray::#COLOR_RAYWHITE)        InitRectangle(@rect, 0, 0, GetScreenWidth(), GetScreenHeight())        exitWindow = GuiWindowBox(rect, "PORTABLE WINDOW")        DrawTextRaylib("Mouse Position: [ "+Str(mousePosition\x)+", "+Str(mousePosition\y)+" ]", 10, 40, 10, #COLOR_DARKGRAY)    EndDrawing()    ;>---------------------------------------------------------------------------------        ; If we want to have a screenshot    If IsKeyPressed(ray::#KEY_F1)        TakeScreenshot("screenshots/raygui_portable_window.png")    EndIfWend; De-Initialization;>-------------------------------------------------------------------------------------CloseWindowRaylib()                ; Close window and OpenGL context;>-------------------------------------------------------------------------------------