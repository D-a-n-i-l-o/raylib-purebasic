;*******************************************************************************************;*;*   raylib [core] example - Initialize 3d camera free;*;*   This example has been created using raylib 1.3 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2015 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the module; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [core] example - 3d camera free" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.; Define the camera to look into our 3d worldDefine camera.Camera3DInitVector3( @camera\position, 10.0, 10.0, 10.0 )   ; Camera positionInitVector3( @camera\target  ,  0.0,  0.0,  0.0 )   ; Camera looking at pointInitVector3( @camera\up      ,  0.0,  1.0,  0.0 )   ; Camera up vector (rotation towards target)camera\fovy = 45.0                                  ; Camera field-of-view Ycamera\type = #CAMERATYPE_PERSPECTIVE               ; Camera mode typeDefine cubePosition.Vector3SetCameraMode(@camera, #CAMERAMODE_FREE)            ; Set a free camera modeSetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopWhile Not WindowShouldClose()           ; Detect window close button or ESC key    ; Update    ;>---------------------------------------------------------------------------------    UpdateCamera( @camera )             ; Update camera    If IsKeyDown(#KEY_R)                ; Reset camera target to (0,0,0)        InitVector3( @camera\target, 0.0, 0.0, 0.0 )    EndIf    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)                BeginMode3D(@camera)            DrawCube     (@cubePosition, 2.0, 2.0, 2.0, #COLOR_RED)            DrawCubeWires(@cubePosition, 2.0, 2.0, 2.0, #COLOR_MAROON)            DrawGrid(10, 1.0)        EndMode3D()        DrawRectangle( 10, 10, 320, 133, Fade(#COLOR_SKYBLUE, 0.5) )        DrawRectangleLines( 10, 10, 320, 133, #COLOR_BLUE )        DrawTextRaylib("Free camera default controls:", 20, 20, 10, #COLOR_BLACK)        DrawTextRaylib("- Mouse Wheel to Zoom in-out", 40, 40, 10, #COLOR_DARKGRAY)        DrawTextRaylib("- Mouse Wheel Pressed to Pan", 40, 60, 10, #COLOR_DARKGRAY)        DrawTextRaylib("- Alt + Mouse Wheel Pressed to Rotate", 40, 80, 10, #COLOR_DARKGRAY)        DrawTextRaylib("- Alt + Ctrl + Mouse Wheel Pressed for Smooth Zoom", 40, 100, 10, #COLOR_DARKGRAY)        DrawTextRaylib("- R to zoom to (0, 0, 0)", 40, 120, 10, #COLOR_DARKGRAY)        DrawFPS(340,10)    EndDrawing()    ;>---------------------------------------------------------------------------------        ; If we want to have a screenshot    If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/core_3d_camera_free.png")    EndIfWend; De-Initialization;>-------------------------------------------------------------------------------------CloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------