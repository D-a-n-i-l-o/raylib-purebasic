;*******************************************************************************************;*;*   raylib [texture] example - Image text drawing using TTF generated spritefont;*;*   This example has been created using raylib 1.8 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2017 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the module; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [texture] example - image text drawing" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.; NOTE: Textures MUST be loaded after Window initialization (OpenGL context is required)Define parrots.ImageLoadImageRaylib(@parrots, "resources/parrots.png")  ; Load image in CPU memory (RAM); TTF Font loading with custom generation parametersDefine font.FontLoadFontEx(@font, "resources/KAISG.ttf", 64, 0, 0); Draw over image using custom fontDefine vec.Vector2InitVector2(@vec, 20.0, 20.0)ImageDrawTextEx(@parrots, @vec, @font, "[Parrots font drawing]", font\baseSize, 0.0, #COLOR_RED)Define texture.Texture2DLoadTextureFromImage(@texture, @parrots)    ; Image converted to texture, uploaded to GPU memory (VRAM)UnloadImage(@parrots)                       ; Once image has been converted to texture and uploaded to VRAM,                                            ; it can be unloaded from RAMDefine position.Vector2InitVector2(@position, #SCREEN_WIDTH  / 2 - texture\width  / 2,                       #SCREEN_HEIGHT / 2 - texture\height / 2 - 20)Define showFont = #FalseSetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopRepeat    ; Update    ;>---------------------------------------------------------------------------------    If IsKeyDown(#KEY_SPACE) : showFont = #True    Else                     : showFont = #False    EndIf    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)        If Not showFont            ; Draw texture with text already drawn inside            DrawTextureV(@texture, @position, #COLOR_WHITE)            ; Draw text directly using sprite font            InitVector2(@vec, position\x + 20, position\y + 20 + 280)            DrawTextEx(@font, "[Parrots font drawing]", @vec, font\baseSize, 0.0, #COLOR_WHITE)        Else            DrawTexture(@font\texture, #SCREEN_WIDTH/2 - font\texture\width / 2, 10, #COLOR_BLACK)        EndIf        DrawTextRaylib("PRESS SPACE to SEE USED SPRITEFONT ", 290, 420, 10, #COLOR_DARKGRAY)    EndDrawing()    ;>---------------------------------------------------------------------------------        If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/textures_image_text.png")    EndIf    Until WindowShouldClose()               ; Detect window close button or ESC key; De-Initialization;>-------------------------------------------------------------------------------------UnloadTexture(@texture)                 ; Texture unloadingUnloadFont(@font)                       ; Unload custom spritefontCloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------