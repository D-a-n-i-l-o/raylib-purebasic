;*******************************************************************************************;*;*   raylib [core] example - Mouse input;*;*   This example has been created using raylib 1.0 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2013-2020 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450ray::InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [core] example - mouse input" )If Not ray::IsWindowReady()             ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.ray::SetTargetFPS(60)                   ; Set our game to run at 60 frames-per-second;; Define a variable 'ballPosition' with type 'Vector2'; 'Vector2' is a structure defined by raylib;Define ballPosition.ray::Vector2;; Initialize the Vector2 structure,; so our ball is in the middle of the screen;ray::InitVector2( @ballPosition, #SCREEN_WIDTH/2.0, #SCREEN_HEIGHT/2.0 );; Define initial ball color;Define ballColor = ray::#COLOR_DARKBLUE;>-------------------------------------------------------------------------------------; Main game loopWhile Not ray::WindowShouldClose()      ; Detect window close button or ESC key    ; Update    ;>---------------------------------------------------------------------------------    ray::GetMousePosition(@ballPosition)    If ray::IsMouseButtonPressed(ray::#MOUSE_LEFT_BUTTON)        ballColor = ray::#COLOR_MAROON    ElseIf ray::IsMouseButtonPressed(ray::#MOUSE_MIDDLE_BUTTON)        ballColor = ray::#COLOR_LIME    ElseIf ray::IsMouseButtonPressed(ray::#MOUSE_RIGHT_BUTTON)        ballColor = ray::#COLOR_DARKBLUE    EndIf    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    ray::BeginDrawing()            ray::ClearBackground(ray::#COLOR_RAYWHITE)        ray::DrawCircleV(@ballPosition, 40, ballColor)        ray::DrawTextRaylib("move ball with mouse and click mouse button to change color", 10, 40, 20, ray::#COLOR_DARKGRAY)        ray::DrawFPS(10,10)    ray::EndDrawing()    ;>---------------------------------------------------------------------------------        ; If we want to have a screenshot    If ray::IsKeyPressed(ray::#KEY_F1)        ray::TakeScreenshot("screenshots/core_input_mouse.png")    EndIfWend; De-Initialization;>-------------------------------------------------------------------------------------ray::CloseWindowRaylib()                ; Close window and OpenGL context;>-------------------------------------------------------------------------------------