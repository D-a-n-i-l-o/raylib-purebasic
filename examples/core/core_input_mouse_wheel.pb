;*******************************************************************************************;*;*   raylib [core] examples - Mouse wheel input;*;*   This example has been created using raylib 1.0 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2013-2020 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                      ; First we need to includeXIncludeFile "raylib.pbi"                   ; the raylib-purebasic import; Initialization;--------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450ray::InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [core] example - input mouse wheel" )If Not ray::IsWindowReady()                 ; After creating the window, we check    End                                     ; for errors at initialization.EndIf                                       ; In case of error at init we end the program.ray::SetTargetFPS(60)                       ; Set our game to run at 60 frames-per-second;--------------------------------------------------------------------------------------Define boxPositionY = #SCREEN_HEIGHT/2 - 40#ScrollSpeed = 4                            ; Scrolling speed in pixels; Main game loopWhile Not ray::WindowShouldClose()          ; Detect window close button or ESC key    ; Update    ;----------------------------------------------------------------------------------    boxPositionY - ray::GetMouseWheelMove() * #ScrollSpeed    ;----------------------------------------------------------------------------------    ; Draw    ;----------------------------------------------------------------------------------    ray::BeginDrawing()            ray::ClearBackground(ray::#COLOR_RAYWHITE)        ray::DrawRectangle(#SCREEN_WIDTH/2 - 40, boxPositionY, 80, 80, ray::#COLOR_MAROON)        ray::DrawTextRaylib("Use mouse wheel to move the cube up and down!", 10, 40, 20, ray::#COLOR_GRAY)        ray::DrawTextRaylib("Box position Y: "+boxPositionY, 10, 70, 20, ray::#COLOR_LIGHTGRAY)        ray::DrawFPS(10,10)    ray::EndDrawing()    ;----------------------------------------------------------------------------------        ; If we want to have a screenshot    If ray::IsKeyPressed(ray::#KEY_F1)        ray::TakeScreenshot("screenshots/core_input_mouse_wheel.png")    EndIfWend; De-Initialization;--------------------------------------------------------------------------------------ray::CloseWindowRaylib()                ; Close window and OpenGL context;--------------------------------------------------------------------------------------