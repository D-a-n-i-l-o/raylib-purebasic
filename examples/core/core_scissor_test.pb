;*******************************************************************************************;*;*   raylib [core] example - Scissor test;*;*   This example has been created using raylib 2.5 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Example contributed by Chris Dill (@MysteriousSpace) and reviewed by Ramon Santamaria (@raysan5);*;*   Copyright (c) 2019 Chris Dill (@MysteriousSpace);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the module; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [core] example - scissor test" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.Define.Rectangle scissorAreaInitRectangle( @scissorArea, 0, 0, 300, 300 )Define scissorMode = #TrueSetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopWhile Not WindowShouldClose()           ; Detect window close button or ESC key    ; Update    ;>---------------------------------------------------------------------------------    If IsKeyPressed(#KEY_S)        scissorMode ! 1    EndIf    ; Centre the scissor area around the mouse position    scissorArea\x = GetMouseX() - scissorArea\width/2    scissorArea\y = GetMouseY() - scissorArea\height/2    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)        If scissorMode            BeginScissorMode(scissorArea\x, scissorArea\y, scissorArea\width, scissorArea\height)        EndIf        ; Draw full screen rectangle and some text        ; NOTE: Only part defined by scissor area will be rendered        DrawRectangle(0, 0, GetScreenWidth(), GetScreenHeight(), #COLOR_RED)        DrawTextRaylib("Move the mouse around to reveal this text!", 190, 200, 20, #COLOR_LIGHTGRAY)        If scissorMode            EndScissorMode()        EndIf        DrawRectangleLinesEx(@scissorArea, 1, #COLOR_BLACK)        DrawTextRaylib("Press S to toggle scissor test", 10, 10, 20, #COLOR_BLACK)    EndDrawing()    ;>---------------------------------------------------------------------------------        If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/core_scissor_test.png")    EndIf    Wend; De-Initialization;>-------------------------------------------------------------------------------------CloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------