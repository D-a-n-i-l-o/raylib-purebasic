;*******************************************************************************************;*;*   raylib [textures] example - Texture source and destination rectangles;*;*   This example has been created using raylib 1.3 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2015 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the module; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [textures] examples - texture source and destination rectangles" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.; NOTE: Textures MUST be loaded after Window initialization (OpenGL context is required)Define scarfy.Texture2DLoadTextureRaylib(@scarfy, "resources/scarfy.png")  ; Texture loadingDefine frameWidth = scarfy\width / 6.0Define frameHeight = scarfy\heightDefine.Rectangle sourceRec, destRec; Source rectangle (part of the texture to use for drawing)InitRectangle(@sourceRec, 0.0, 0.0, frameWidth, frameHeight); Destination rectangle (screen rectangle where drawing part of texture)InitRectangle(@destRec, #SCREEN_WIDTH/2, #SCREEN_HEIGHT/2, frameWidth*2, frameHeight*2); Origin of the texture (rotation/scale point), it's relative to destination rectangle sizeDefine origin.Vector2InitVector2(@origin, frameWidth, frameHeight)Define rotation = 0SetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopRepeat    ; Update    ;>---------------------------------------------------------------------------------    rotation + 1    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)        ; NOTE: Using DrawTexturePro() we can easily rotate and scale the part of the texture we draw        ; sourceRec defines the part of the texture we use for drawing        ; destRec defines the rectangle where our texture part will fit (scaling it to fit)        ; origin defines the point of the texture used as reference for rotation and scaling        ; rotation defines the texture rotation (using origin as rotation point)        DrawTexturePro(@scarfy, @sourceRec, @destRec, @origin, rotation, #COLOR_WHITE)        DrawLine(destRec\x, 0, destRec\x, #SCREEN_HEIGHT, #COLOR_GRAY)        DrawLine(0, destRec\y, #SCREEN_WIDTH, destRec\y, #COLOR_GRAY)        DrawTextRaylib("(c) Scarfy sprite by Eiden Marsal", #SCREEN_WIDTH - 200, #SCREEN_HEIGHT - 20, 10, #COLOR_GRAY)    EndDrawing()    ;>---------------------------------------------------------------------------------        If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/textures_srcrec_dstrec.png")    EndIf    Until WindowShouldClose()               ; Detect window close button or ESC key; De-Initialization;>-------------------------------------------------------------------------------------UnloadTexture(@scarfy)                  ; Texture unloadingCloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------