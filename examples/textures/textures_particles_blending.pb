;*******************************************************************************************;*;*   raylib example - particles blending;*;*   This example has been created using raylib 1.7 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2017 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the module#MAX_PARTICLES = 200; Particle structure with basic dataStructure Particle    position.Vector2    alpha.f    size.f    rotation.f    color.l    active.l    ; NOTE: Use it to activate/deactive particleEndStructure; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450SetConfigFlags(#FLAG_WINDOW_RESIZABLE)InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [textures] example - particles blending" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.; Particles pool, reuse them!Dim mouseTail.Particle(#MAX_PARTICLES)Define i; Initialize particlesFor i = 0 To #MAX_PARTICLES-1    mouseTail(i)\color = RGBA( GetRandomValue(0, 255), GetRandomValue(0, 255), GetRandomValue(0, 255), 255 )    mouseTail(i)\alpha = 1.0    mouseTail(i)\size = GetRandomValue(1, 30)/20.0    mouseTail(i)\rotation = GetRandomValue(0, 360)    mouseTail(i)\active = #FalseNextDefine gravity.f = 3.0Define smoke.Texture2DLoadTextureRaylib(@smoke, "resources/smoke.png")Define smokeRect.Rectangle, particleRect.Rectangle, particlePos.Vector2InitRectangle(@smokeRect, 0.0, 0.0, smoke\width, smoke\height)Define blending = #BLEND_ALPHASetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopRepeat    ; Update    ;>---------------------------------------------------------------------------------    ; Activate one particle every frame and Update active particles    ; NOTE: Particles initial position should be mouse position when activated    ; NOTE: Particles fall down with gravity and rotation... and disappear after 2 seconds (alpha = 0)    ; NOTE: When a particle disappears, active = false and it can be reused.    For i = 0 To #MAX_PARTICLES - 1        If Not mouseTail(i)\active            mouseTail(i)\active = #True            mouseTail(i)\alpha = 1.0            GetMousePosition(@mouseTail(i)\position)            Break        EndIf    Next    For i = 0 To #MAX_PARTICLES - 1        If mouseTail(i)\active            mouseTail(i)\position\y + gravity            mouseTail(i)\alpha - 0.01            If mouseTail(i)\alpha <= 0.0                mouseTail(i)\active = #False            EndIf            mouseTail(i)\rotation + 5.0        EndIf    Next    If IsKeyPressed(#KEY_SPACE)        If blending = #BLEND_ALPHA            blending = #BLEND_ADDITIVE        Else            blending = #BLEND_ALPHA        EndIf    EndIf    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_DARKGRAY)        BeginBlendMode(blending)            ; Draw active particles            For i = 0 To #MAX_PARTICLES - 1                If mouseTail(i)\active                    InitRectangle(@particleRect, mouseTail(i)\position\x,                                                 mouseTail(i)\position\y,                                                 smoke\width  * mouseTail(i)\size,                                                 smoke\height * mouseTail(i)\size )                    InitVector2(@particlePos, smoke\width  * mouseTail(i)\size / 2.0,                                              smoke\height * mouseTail(i)\size / 2.0)                    DrawTexturePro(@smoke, @smokeRect,                                           @particleRect,                                           @particlePos,                                           mouseTail(i)\rotation,                                           Fade(mouseTail(i)\color, mouseTail(i)\alpha))                EndIf            Next        EndBlendMode();        DrawTextRaylib("PRESS SPACE to CHANGE BLENDING MODE", 180, 20, 20, #COLOR_BLACK)        If blending = #BLEND_ALPHA            DrawTextRaylib("ALPHA BLENDING", 290, GetScreenHeight() - 40, 20, #COLOR_BLACK)        Else            DrawTextRaylib("ADDITIVE BLENDING", 280, GetScreenHeight() - 40, 20, #COLOR_RAYWHITE)        EndIf    EndDrawing()    ;>---------------------------------------------------------------------------------        If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/textures_particles_blending.png")    EndIf    Until WindowShouldClose()               ; Detect window close button or ESC key; De-Initialization;>-------------------------------------------------------------------------------------UnloadTexture(@smoke)CloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------