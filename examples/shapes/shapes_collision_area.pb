;*******************************************************************************************;*;*   raylib [shapes] example - collision area;*;*   This example has been created using raylib 2.5 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2013-2019 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the module; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [shapes] example - collision area" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.; Box A: Moving boxDefine boxA.Rectangle, boxASpeedX = 4InitRectangle(@boxA, 10, GetScreenHeight()/2 - 50, 200, 100); Box B: Mouse moved boxDefine boxB.RectangleInitRectangle(@boxB, GetScreenWidth()/2 - 30, GetScreenHeight()/2 - 30, 60, 60)Define boxCollision.Rectangle           ; Collision rectangleDefine screenUpperLimit = 40            ; Top menu limitsDefine pause = #False                   ; Movement pauseDefine collision = #False               ; Collision detectionSetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopWhile Not WindowShouldClose()           ; Detect window close button or ESC key    ; Update    ;>---------------------------------------------------------------------------------    ; Move box if not paused    If Not pause : boxA\x + boxASpeedX : EndIf    ; Bounce box on x screen limits    If ((boxA\x + boxA\width) >= GetScreenWidth()) Or (boxA\x <= 0)        boxASpeedX * -1    EndIf    ; Update player-controlled-box (box02)    boxB\x = GetMouseX() - boxB\width/2    boxB\y = GetMouseY() - boxB\height/2    ; Make sure Box B does not go out of move area limits    If boxB\x + boxB\width >= GetScreenWidth()        boxB\x = GetScreenWidth() - boxB\width    ElseIf boxB\x <= 0        boxB\x = 0    EndIf    If boxB\y + boxB\height >= GetScreenHeight()        boxB\y = GetScreenHeight() - boxB\height    ElseIf boxB\y <= screenUpperLimit        boxB\y = screenUpperLimit    EndIf    ; Check boxes collision    collision = CheckCollisionRecs(@boxA, @boxB)    ; Get collision rectangle (only on collision)    If collision        GetCollisionRec(@boxCollision, @boxA, @boxB)    EndIf    ; Pause Box A movement    If IsKeyPressed(#KEY_SPACE) : pause ! 1 : EndIf    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)        Define col        If collision : col = #COLOR_RED : Else : col = #COLOR_BLACK : EndIf        DrawRectangle(0, 0, #SCREEN_WIDTH, screenUpperLimit, col)        DrawRectangleRec(@boxA, #COLOR_GOLD)        DrawRectangleRec(@boxB, #COLOR_BLUE)        If collision            ; Draw collision area            DrawRectangleRec(@boxCollision, #COLOR_LIME)            ; Draw collision message            DrawTextRaylib("COLLISION!", GetScreenWidth()/2 - MeasureText("COLLISION!", 20)/2, screenUpperLimit/2 - 10, 20, #COLOR_BLACK)            ; Draw collision area            DrawTextRaylib("Collision Area: "+ Str(boxCollision\width*boxCollision\height), GetScreenWidth()/2 - 100, screenUpperLimit + 10, 20, #COLOR_BLACK)        EndIf        DrawFPS(10, 10)    EndDrawing()    ;>---------------------------------------------------------------------------------        If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/shapes_collision_area.png")    EndIf    Wend; De-Initialization;>-------------------------------------------------------------------------------------CloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------