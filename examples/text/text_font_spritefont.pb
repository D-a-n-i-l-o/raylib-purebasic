;*******************************************************************************************;*;*   raylib [text] example - Sprite font loading;*;*   Loaded sprite fonts have been generated following XNA SpriteFont conventions:;*     - Characters must be ordered starting with character 32 (Space);*     - Every character must be contained within the same Rectangle height;*     - Every character and every line must be separated the same distance;*     - Rectangles must be defined by a MAGENTA color background;*;*   If following this constraints, a font can be provided just by an image,;*   this is quite handy to avoid additional information files (like BMFonts use).;*;*   This example has been created using raylib 1.0 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2014 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the module; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [text] example - sprite font loading" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.#msg1 = "THIS IS A custom SPRITE FONT..."#msg2 = "...and this is ANOTHER CUSTOM font..."#msg3 = "...and a THIRD one! GREAT! :D"; NOTE: Textures/Fonts MUST be loaded after Window initialization (OpenGL context is required)Define.Font font1, font2, font3LoadFontRaylib(@font1, "resources/custom_mecha.png")            ; Font loadingLoadFontRaylib(@font2, "resources/custom_alagard.png")          ; Font loadingLoadFontRaylib(@font3, "resources/custom_jupiter_crash.png")    ; Font loadingDefine.Vector2 fontPosition1, fontPosition2, fontPosition3, measuredTextMeasureTextEx(@measuredText, @font1, #msg1, font1\baseSize, -3)InitVector2( @fontPosition1, #SCREEN_WIDTH/2 - measuredText\x/2, #SCREEN_HEIGHT/2 - font1\baseSize/2 - 80 )MeasureTextEx(@measuredText, @font2, #msg2, font2\baseSize, -2)InitVector2( @fontPosition2, #SCREEN_WIDTH/2 - measuredText\x/2, #SCREEN_HEIGHT/2 - font2\baseSize/2 - 10 )MeasureTextEx(@measuredText, @font3, #msg3, font3\baseSize,  2)InitVector2( @fontPosition3, #SCREEN_WIDTH/2 - measuredText\x/2, #SCREEN_HEIGHT/2 - font3\baseSize/2 + 50 )SetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopWhile Not WindowShouldClose()           ; Detect window close button or ESC key    ; Update    ;>---------------------------------------------------------------------------------    ; TODO: Update your variables here    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)        DrawTextEx(@font1, #msg1, @fontPosition1, font1\baseSize, -3, #COLOR_WHITE)        DrawTextEx(@font2, #msg2, @fontPosition2, font2\baseSize, -2, #COLOR_WHITE)        DrawTextEx(@font3, #msg3, @fontPosition3, font3\baseSize,  2, #COLOR_WHITE)    EndDrawing()    ;>---------------------------------------------------------------------------------        If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/text_font_spritefont.png")    EndIf    Wend; De-Initialization;>-------------------------------------------------------------------------------------UnloadFont(@font1)                      ; Font unloadingUnloadFont(@font2)                      ; Font unloadingUnloadFont(@font3)                      ; Font unloadingCloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------