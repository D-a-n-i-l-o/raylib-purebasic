;*******************************************************************************************;*;*   raylib [core] example - Picking in 3d mode;*;*   This example has been created using raylib 1.3 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2015 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the module; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [core] example - 3d picking" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.; Define the camera to look into our 3d worldDefine camera.Camera3DInitVector3( @camera\position, 10.0, 10.0, 10.0 )   ; Camera positionInitVector3( @camera\target  ,  0.0,  0.0,  0.0 )   ; Camera looking at pointInitVector3( @camera\up      ,  0.0,  1.0,  0.0 )   ; Camera up vector (rotation towards target)camera\fovy = 45.0                                  ; Camera field-of-view Ycamera\type = #CAMERATYPE_PERSPECTIVE               ; Camera mode typeDefine.Vector3 cubePosition, cubeSizeInitVector3( @cubePosition, 0.0, 1.0, 0.0 )InitVector3( @cubeSize    , 2.0, 2.0, 2.0 )Define ray.Ray                                      ; Picking line rayDefine collision = #FalseDefine mouse.Vector2                                ; Vector2 for mouse positionSetCameraMode(@camera, #CAMERAMODE_FREE)            ; Set a free camera modeSetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopWhile Not WindowShouldClose()           ; Detect window close button or ESC key    ; Update    ;>---------------------------------------------------------------------------------    UpdateCamera( @camera )             ; Update camera    If IsMouseButtonPressed(#MOUSE_LEFT_BUTTON)        If Not collision            GetMousePosition( @mouse )            GetMouseRay(@ray, @mouse, @camera)            ; Check collision between ray and box            Define boundingBox.BoundingBox            InitVector3( @boundingBox\min, cubePosition\x - cubeSize\x/2,                                           cubePosition\y - cubeSize\y/2,                                           cubePosition\z - cubeSize\z/2 )            InitVector3( @boundingBox\max, cubePosition\x + cubeSize\x/2,                                           cubePosition\y + cubeSize\y/2,                                           cubePosition\z + cubeSize\z/2 )            collision = CheckCollisionRayBox(@ray, @boundingBox)        Else            collision = #False        EndIf    EndIf    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)                BeginMode3D(@camera)            If collision                DrawCube(@cubePosition, cubeSize\x, cubeSize\y, cubeSize\z, #COLOR_RED)                DrawCubeWires(@cubePosition, cubeSize\x, cubeSize\y, cubeSize\z, #COLOR_MAROON)                DrawCubeWires(@cubePosition, cubeSize\x + 0.2, cubeSize\y + 0.2, cubeSize\z + 0.2, #COLOR_GREEN)            Else                DrawCube(@cubePosition, cubeSize\x, cubeSize\y, cubeSize\z, #COLOR_GRAY)                DrawCubeWires(@cubePosition, cubeSize\x, cubeSize\y, cubeSize\z, #COLOR_DARKGRAY)            EndIf            DrawRay(@ray, #COLOR_MAROON)                        DrawGrid(10, 1.0)        EndMode3D()        DrawTextRaylib("Try selecting the box with mouse!", 240, 10, 20, #COLOR_DARKGRAY)        If collision            DrawTextRaylib("BOX SELECTED", (#SCREEN_WIDTH - MeasureText("BOX SELECTED", 30)) / 2, #SCREEN_HEIGHT * 0.1, 30, #COLOR_GREEN)        EndIf        DrawFPS(10,10)    EndDrawing()    ;>---------------------------------------------------------------------------------        ; If we want to have a screenshot    If IsKeyPressed(#KEY_F1)        TakeScreenshot("screenshots/core_3d_picking.png")    EndIfWend; De-Initialization;>-------------------------------------------------------------------------------------CloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------