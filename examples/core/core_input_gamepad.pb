;*******************************************************************************************;*;*   raylib [core] example - Gamepad input;*;*   NOTE: This example requires a Gamepad connected to the system;*         raylib is configured to work with the following gamepads:;*                - Xbox 360 Controller (Xbox 360, Xbox One);*                - PLAYSTATION(R)3 Controller;*         Check raylib.pbi for buttons configuration;*;*   This example has been created using raylib 2.5 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Copyright (c) 2013-2020 Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                      ; First we need to includeXIncludeFile "raylib.pbi"                   ; the raylib-purebasic importEnableExplicit#XBOX360_NAME_ID = "Xbox 360 Controller"#PS3_NAME_ID     = "PLAYSTATION(R)3 Controller"; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 500ray::SetConfigFlags(ray::#FLAG_MSAA_4X_HINT);// Set MSAA 4X hint before windows creationray::InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [core] example - gamepad input" )If Not ray::IsWindowReady()                 ; After creating the window, we check    End                                     ; for errors at initialization.EndIf                                       ; In case of error at init we end the program.ray::SetTargetFPS(60)                       ; Set our game to run at 60 frames-per-secondDefine texPs3Pad.ray::Texture2Dray::LoadTextureRaylib(@texPs3Pad, "resources/ps3.png")Define texXboxPad.ray::Texture2Dray::LoadTextureRaylib(@texXboxPad, "resources/xbox.png");>-------------------------------------------------------------------------------------; Main game loopWhile Not ray::WindowShouldClose()          ; Detect window close button or ESC key    ; Draw    ;>---------------------------------------------------------------------------------    ray::BeginDrawing()            ray::ClearBackground(ray::#COLOR_RAYWHITE)        If ray::IsGamepadAvailable(ray::#GAMEPAD_PLAYER1)            ray::DrawTextRaylib("GP1: "+ray::GetGamepadName(ray::#GAMEPAD_PLAYER1), 10, 40, 10, ray::#COLOR_BLACK)            If ray::IsGamepadName(ray::#GAMEPAD_PLAYER1, #XBOX360_NAME_ID)                                ray::DrawTexture(@texXboxPad, 0, 0, ray::#COLOR_DARKGRAY)                                ; Draw buttons: xbox home                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_MIDDLE)                    ray::DrawCircle(394, 89, 19, ray::#COLOR_RED)                EndIf                ; Draw buttons: basic                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_MIDDLE_RIGHT)                    ray::DrawCircle(436, 150, 9, ray::#COLOR_RED)                EndIf                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_MIDDLE_LEFT)                    ray::DrawCircle(352, 150, 9, ray::#COLOR_RED)                EndIf                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_RIGHT_FACE_LEFT)                    ray::DrawCircle(501, 151, 15, ray::#COLOR_BLUE)                EndIf                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_RIGHT_FACE_DOWN)                    ray::DrawCircle(536, 187, 15, ray::#COLOR_LIME)                EndIf                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_RIGHT_FACE_RIGHT)                    ray::DrawCircle(572, 151, 15, ray::#COLOR_MAROON)                EndIf                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_RIGHT_FACE_UP)                    ray::DrawCircle(536, 115, 15, ray::#COLOR_GOLD)                EndIf                ; Draw buttons: d-pad                ray::DrawRectangle(317, 202, 19, 71, ray::#COLOR_BLACK)                ray::DrawRectangle(293, 228, 69, 19, ray::#COLOR_BLACK)                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_LEFT_FACE_UP)                    ray::DrawRectangle(317, 202, 19, 26, ray::#COLOR_RED)                EndIf                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_LEFT_FACE_DOWN)                    ray::DrawRectangle(317, 202 + 45, 19, 26, ray::#COLOR_RED)                EndIf                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_LEFT_FACE_LEFT)                    ray::DrawRectangle(292, 228, 25, 19, ray::#COLOR_RED)                EndIf                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_LEFT_FACE_RIGHT)                    ray::DrawRectangle(292 + 44, 228, 26, 19, ray::#COLOR_RED)                EndIf                ; Draw buttons: left-right back                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_LEFT_TRIGGER_1)                    ray::DrawCircle(259, 61, 20, ray::#COLOR_RED)                EndIf                If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_RIGHT_TRIGGER_1)                    ray::DrawCircle(536, 61, 20, ray::#COLOR_RED)                EndIf                ; Draw axis: left joystick                ray::DrawCircle(259, 152, 39, ray::#COLOR_BLACK);                ray::DrawCircle(259, 152, 34, ray::#COLOR_LIGHTGRAY);                ray::DrawCircle(259 + (ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_LEFT_X)*20),                                152 - (ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_LEFT_Y)*20),                                 25, ray::#COLOR_BLACK)                ; Draw axis: right joystick                ray::DrawCircle(461, 237, 38, ray::#COLOR_BLACK)                ray::DrawCircle(461, 237, 33, ray::#COLOR_LIGHTGRAY)                ray::DrawCircle(461 + (ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_RIGHT_X)*20),                                237 - (ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_RIGHT_Y)*20),                                 25, ray::#COLOR_BLACK)                ; Draw axis: left-right triggers                ray::DrawRectangle(170, 30, 15, 70, ray::#COLOR_GRAY);                ray::DrawRectangle(604, 30, 15, 70, ray::#COLOR_GRAY);                ray::DrawRectangle(170, 30, 15, (((1.0 + ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_LEFT_TRIGGER))/2.0)*70), ray::#COLOR_RED)                ray::DrawRectangle(604, 30, 15, (((1.0 + ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_RIGHT_TRIGGER))/2.0)*70), ray::#COLOR_RED)                ;ray::DrawTextRaylib("Xbox axis LT: "+StrU( ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_LEFT_TRIGGER), 2),  10, 40, 10, ray::#COLOR_BLACK)                ;ray::DrawTextRaylib("Xbox axis RT: "+StrU( ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_RIGHT_TRIGGER), 2), 10, 60, 10, ray::#COLOR_BLACK)                            ElseIf ray::IsGamepadName(ray::#GAMEPAD_PLAYER1, #PS3_NAME_ID)                                ray::DrawTexture(@texPs3Pad, 0, 0, ray::#COLOR_DARKGRAY)                    ; Draw buttons: ps                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_MIDDLE)                        ray::DrawCircle(396, 222, 13, ray::#COLOR_RED)                    EndIf                    ; Draw buttons: basic                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_MIDDLE_LEFT)                        ray::DrawRectangle(328, 170, 32, 13, ray::#COLOR_RED)                    EndIf                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_MIDDLE_RIGHT)                        Define.ray::Vector2 v1, v2, v3                        ray::InitVector2(@v1, 436, 168)                        ray::InitVector2(@v2, 436, 185)                        ray::InitVector2(@v3, 464, 177)                        ray::DrawTriangle(@v1, @v2, @v3, ray::#COLOR_RED)                    EndIf                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_RIGHT_FACE_UP)                        ray::DrawCircle(557, 144, 13, ray::#COLOR_LIME)                    EndIf                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_RIGHT_FACE_RIGHT)                        ray::DrawCircle(586, 173, 13, ray::#COLOR_RED)                    EndIf                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_RIGHT_FACE_DOWN)                        ray::DrawCircle(557, 203, 13, ray::#COLOR_VIOLET)                    EndIf                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_RIGHT_FACE_LEFT)                        ray::DrawCircle(527, 173, 13, ray::#COLOR_PINK)                    EndIf                    ; Draw buttons: d-pad                    ray::DrawRectangle(225, 132, 24, 84, ray::#COLOR_BLACK)                    ray::DrawRectangle(195, 161, 84, 25, ray::#COLOR_BLACK)                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_LEFT_FACE_UP)                        ray::DrawRectangle(225, 132, 24, 29, ray::#COLOR_RED)                    EndIf                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_LEFT_FACE_DOWN)                        ray::DrawRectangle(225, 132 + 54, 24, 30, ray::#COLOR_RED)                    EndIf                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_LEFT_FACE_LEFT)                        ray::DrawRectangle(195, 161, 30, 25, ray::#COLOR_RED)                    EndIf                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_LEFT_FACE_RIGHT)                        ray::DrawRectangle(195 + 54, 161, 30, 25, ray::#COLOR_RED)                    EndIf                    ; Draw buttons: left-right back buttons                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_LEFT_TRIGGER_1)                        ray::DrawCircle(239, 82, 20, ray::#COLOR_RED)                    EndIf                    If ray::IsGamepadButtonDown(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_BUTTON_RIGHT_TRIGGER_1)                        ray::DrawCircle(557, 82, 20, ray::#COLOR_RED)                    EndIf                    ; Draw axis: left joystick                    ray::DrawCircle(319, 255, 35, ray::#COLOR_BLACK)                    ray::DrawCircle(319, 255, 31, ray::#COLOR_LIGHTGRAY)                    ray::DrawCircle(319 + (ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_LEFT_X)*20),                                    255 + (ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_LEFT_Y)*20),                                     25, ray::#COLOR_BLACK)                    ; Draw axis: right joystick                    ray::DrawCircle(475, 255, 35, ray::#COLOR_BLACK)                    ray::DrawCircle(475, 255, 31, ray::#COLOR_LIGHTGRAY)                    ray::DrawCircle(475 + (ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_RIGHT_X)*20),                                    255 + (ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_RIGHT_Y)*20),                                     25, ray::#COLOR_BLACK)                    ; Draw axis: left-right triggers                    ray::DrawRectangle(169, 48, 15, 70, ray::#COLOR_GRAY)                    ray::DrawRectangle(611, 48, 15, 70, ray::#COLOR_GRAY)                    ray::DrawRectangle(169, 48, 15, (((1.0 - ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_LEFT_TRIGGER))/2.0)*70), ray::#COLOR_RED)                    ray::DrawRectangle(611, 48, 15, (((1.0 - ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, ray::#GAMEPAD_AXIS_RIGHT_TRIGGER))/2.0)*70), ray::#COLOR_RED)            Else                                ray::DrawTextRaylib("- GENERIC GAMEPAD -", 280, 180, 20, ray::#COLOR_GRAY)                ; TODO: Draw generic gamepad                                EndIf                        Define axisCount = ray::GetGamepadAxisCount(ray::#GAMEPAD_PLAYER1)                        ray::DrawTextRaylib("DETECTED AXIS: "+axisCount, 10, 80, 10, ray::#COLOR_MAROON)                        Define i            For i = 0 To axisCount-1                ray::DrawTextRaylib("AXIS "+i+": "+StrF(ray::GetGamepadAxisMovement(ray::#GAMEPAD_PLAYER1, i),2), 20, 110 + 20*i, 10, ray::#COLOR_DARKGRAY)            Next            If ray::GetGamepadButtonPressed() <> -1                ray::DrawTextRaylib("DETECTED BUTTON: "+ray::GetGamepadButtonPressed(), 10, 470, 10, ray::#COLOR_RED)            Else                ray::DrawTextRaylib("DETECTED BUTTON: NONE", 10, 470, 10, ray::#COLOR_GRAY)            EndIf                    Else                        ray::DrawTextRaylib("GP1: NOT DETECTED", 10, 40, 10, ray::#COLOR_GRAY)            ray::DrawTexture(@texXboxPad, 0, 0, ray::#COLOR_LIGHTGRAY)                    EndIf        ray::DrawFPS(10,10)    ray::EndDrawing()    ;>---------------------------------------------------------------------------------        ; If we want to have a screenshot    If ray::IsKeyPressed(ray::#KEY_F1)        ray::TakeScreenshot("screenshots/core_input_gamepad.png")    EndIfWend; De-Initialization;>-------------------------------------------------------------------------------------ray::UnloadTexture(@texPs3Pad)ray::UnloadTexture(@texXboxPad)ray::CloseWindowRaylib()                ; Close window and OpenGL context;>-------------------------------------------------------------------------------------