;*******************************************************************************************;*;*   raylib [core] example - Custom logging;*;*   This example has been created using raylib 2.1 (www.raylib.com);*   raylib is licensed under an unmodified zlib/libpng license (View raylib.h for details);*;*   Example contributed by Pablo Marcos Oltra (@pamarcos) and reviewed by Ramon Santamaria (@raysan5);*;*   Copyright (c) 2018 Pablo Marcos Oltra (@pamarcos) and Ramon Santamaria (@raysan5);*;*   Translated to PureBasic by Danilo Krahn, May 2020;*;********************************************************************************************IncludePath "./../../"                  ; First we need to includeXIncludeFile "raylib.pbi"               ; the raylib-purebasic importEnableExplicit                          ; All variables have to be defined before useUseModule ray                           ; Import the moduleCompilerIf Not #PB_Compiler_Debugger    CompilerError "Please enable the PureBasic debugger for this example!"CompilerEndIf;; Our custom logger procedure;ProcedureC LogCustom( logType.rl_int, *text.Ascii )    Protected msg.s    If *text        msg = FormatDate("%hh:%ii:%ss", Date())        Select logType            Case #LOG_INFO:    msg + " [INFO] : "            Case #LOG_ERROR:   msg + " [ERROR]: "            Case #LOG_WARNING: msg + " [WARN] : "            Case #LOG_DEBUG:   msg + " [Debug]: "            Default:           msg + ": "        EndSelect                msg + PeekS(*text,-1,#PB_UTF8)                Debug msg    EndIfEndProcedure; Initialization;>-------------------------------------------------------------------------------------#SCREEN_WIDTH = 800#SCREEN_HEIGHT = 450; First thing we do is setting our custom logger to ensure everything raylib logs; will use our own logger instead of its internal oneSetTraceLogCallback( @LogCustom() ); Set the current threshold (minimum) log level; We enable logging of all levels;SetTraceLogLevel(#LOG_ALL); Set the exit threshold (minimum) log levelSetTraceLogExit(#LOG_ERROR); Send a log messageTraceLog(#LOG_WARNING, "Warning! This is raylib!")InitWindow( #SCREEN_WIDTH, #SCREEN_HEIGHT, "raylib [core] example - custom logging" )If Not IsWindowReady()                  ; After creating the window, we check    End                                 ; for errors at initialization.EndIf                                   ; In case of error at init we end the program.SetTargetFPS(60)                        ; Set our game to run at 60 frames-per-second;>-------------------------------------------------------------------------------------; Main game loopWhile Not WindowShouldClose()           ; Detect window close button or ESC key    ; Update    ;>---------------------------------------------------------------------------------    ; TODO: Update your variables here    ;>---------------------------------------------------------------------------------    ; Draw    ;>---------------------------------------------------------------------------------    BeginDrawing()            ClearBackground(#COLOR_RAYWHITE)        DrawTextRaylib("Check out the debug output to see the custom logger in action!", 60, 200, 20, #COLOR_LIGHTGRAY)        DrawFPS(10,10)    EndDrawing()    ;>---------------------------------------------------------------------------------Wend; De-Initialization;>-------------------------------------------------------------------------------------CloseWindowRaylib()                     ; Close window and OpenGL context;>-------------------------------------------------------------------------------------